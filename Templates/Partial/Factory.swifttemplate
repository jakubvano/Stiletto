private final class <%= factory.implementationName %>: <% factory.interfaceName %> {
<% if !factory.members.isEmpty { %>
  <% for member in factory.members { %>
    private let <%= member.name %>: <%= member.typeName %>
  <% } %>

    init(<%= factory.members.map { "\($0.name): \($0.typeName)" }.joined(separator: ", ") %>) {
      <% for member in factory.members { %>
        self.<%= member.name %> = <%= member.name %>
      <% } %>
    }
<% } %>

    override var instance: <%= factory.instanceTypeName %> {
        <%
          let parameters = factory.constructor.paramaters
                .map { "\($0.name): \(Factoryfactory.Member.name(for: $0.typeName.name)).instance" }
                .joined(separator: ", ")
        %>
        return <%= factory.instanceTypeName %>.<%= factory.constructor.callName %>(<%= parameters %>)
    }
}
